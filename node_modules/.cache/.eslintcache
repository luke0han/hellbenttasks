[{"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/index.js":"1","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/App.js":"2","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Menu.js":"3","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Task.js":"4","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js":"5","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js":"6","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Reminders.js":"7","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Goals.js":"8","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/LoginPage.js":"9","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/BannerImage.js":"10","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/actions/index.js":"11","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/index.js":"12","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js":"13","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/CreateEditTasks.js":"14","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/auth.js":"15","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/actionTypes/actionTypes.js":"16","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/GoogleAuth.js":"17","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Login.js":"18","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Signup.js":"19","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Auth.js":"20","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/DeleteTask.js":"21","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/apis/db.js":"22","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/tabsReducer.js":"23","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/selectedTaskReducer.js":"24","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/selectedTabReducer.js":"25","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/tasksReducer.js":"26"},{"size":474,"mtime":1634415723123,"results":"27","hashOfConfig":"28"},{"size":670,"mtime":1634464377215,"results":"29","hashOfConfig":"28"},{"size":2585,"mtime":1635024604923,"results":"30","hashOfConfig":"28"},{"size":906,"mtime":1632237391309,"results":"31","hashOfConfig":"32"},{"size":5888,"mtime":1634940854354,"results":"33","hashOfConfig":"28"},{"size":4328,"mtime":1634941207314,"results":"34","hashOfConfig":"28"},{"size":309,"mtime":1633114978823,"results":"35","hashOfConfig":"28"},{"size":297,"mtime":1633115052605,"results":"36","hashOfConfig":"28"},{"size":1266,"mtime":1634237428668,"results":"37","hashOfConfig":"28"},{"size":494,"mtime":1632932669793,"results":"38","hashOfConfig":"28"},{"size":387,"mtime":1634673766303,"results":"39","hashOfConfig":"28"},{"size":439,"mtime":1634464138551,"results":"40","hashOfConfig":"28"},{"size":6134,"mtime":1634940087855,"results":"41","hashOfConfig":"28"},{"size":976,"mtime":1633286911516,"results":"42","hashOfConfig":"32"},{"size":497,"mtime":1633642129092,"results":"43","hashOfConfig":"28"},{"size":59,"mtime":1633541934826,"results":"44","hashOfConfig":"28"},{"size":1732,"mtime":1633535185037,"results":"45","hashOfConfig":"32"},{"size":1869,"mtime":1633963287530,"results":"46","hashOfConfig":"28"},{"size":3355,"mtime":1633963314881,"results":"47","hashOfConfig":"28"},{"size":1407,"mtime":1634236902705,"results":"48","hashOfConfig":"28"},{"size":895,"mtime":1634418776650,"results":"49","hashOfConfig":"28"},{"size":97,"mtime":1634414972824,"results":"50","hashOfConfig":"28"},{"size":149,"mtime":1634416659941,"results":"51","hashOfConfig":"28"},{"size":177,"mtime":1634416658011,"results":"52","hashOfConfig":"28"},{"size":196,"mtime":1634416659095,"results":"53","hashOfConfig":"28"},{"size":362,"mtime":1634417449574,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1nx7y4e",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"amvs5c",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/index.js",[],["119","120"],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/App.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Menu.js",["121"],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Task.js",[],["122","123"],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js",["124","125"],"import React, { useState, useEffect } from 'react'\nimport { Button, Icon, Modal, TextArea } from 'semantic-ui-react'\nimport axios from 'axios'\n// import e from 'express'\n// import TaskDataService from '../services/taskService'\n\nconst AddTask = props => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [firstOpen, setFirstOpen] = useState(false)\n  const [secondOpen, setSecondOpen] = useState(false)\n  const [taskTitle, setTaskTitle] = useState('')\n  const [taskStartTime, setTaskStartTime] = useState('')\n  const [taskEndTime, setTaskEndTime] = useState('')\n  const [notes, setNotes] = useState('')\n  // const id = user.result.googleId\n\n  const clearTaskForm = () => {\n    setTaskTitle('')\n    setTaskStartTime('')\n    setTaskEndTime('')\n    setNotes('')\n  }\n\n  const cancelTaskAdd = () => {\n    setSecondOpen(false)\n    setFirstOpen(false)\n  }\n\n  const closeModal = () => {\n    setSecondOpen(false)\n    clearTaskForm()\n\n    setTimeout(() => {\n      setSecondOpen(false)\n      setFirstOpen(false)\n    }, 1000)\n  }\n\n  const newTaskAdded = e => {\n    e.preventDefault()\n\n    const newTask = {\n      id: user.result.googleId,\n      taskTitle: taskTitle,\n      taskStartTime: taskStartTime,\n      taskEndTime: taskEndTime,\n      notes: notes,\n    }\n\n    axios\n      .post('http://localhost:5000/task/add', newTask)\n      .then(res => props.renderTasks())\n\n    setFirstOpen(true)\n    setSecondOpen(true)\n\n    setTimeout(() => {\n      setSecondOpen(false)\n      setFirstOpen(false)\n    }, 1000)\n\n    props.updateTasksList()\n  }\n\n  return (\n    <>\n      <Button\n        className=\"ui small teal labeled icon button\"\n        onClick={() => setFirstOpen(true)}\n      >\n        <i className=\"plus icon\" /> Add New Task\n      </Button>\n\n      <Modal\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header className=\"ui centered teal\">Add New Task</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <div className=\"ui raised segment\">\n              <form className=\"ui form\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Task\n                    </a>\n                  </label>\n                  <input\n                    onChange={e => setTaskTitle(e.target.value)}\n                    type=\"text\"\n                    name=\"taskTitle\"\n                    placeholder=\"Task Name\"\n                    value={taskTitle}\n                  />\n                </div>\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Time\n                    </a>\n                  </label>\n                  <div className=\"ui three column stackable padded center aligned grid\">\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskStartTime\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setTaskStartTime(e.target.value)}\n                        value={taskStartTime}\n                      />\n                    </div>\n                    <div className=\"two wide column ui horizontal divider\">\n                      To\n                    </div>\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskEndTime\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setTaskEndTime(e.target.value)}\n                        value={taskEndTime}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"field\">\n                    <label>\n                      <a href=\"/\" className=\"ui teal left ribbon label\">\n                        Notes\n                      </a>\n                    </label>\n                    <div className=\"ui loading icon input\" name=\"notes\">\n                      <TextArea\n                        name=\"notes\"\n                        placeholder=\"Add notes about your task...\"\n                        onChange={e => setNotes(e.target.value)}\n                        value={notes}\n                      />\n                    </div>\n                    <div className=\"ui padded equal width grid\"></div>\n                  </div>\n                </div>\n                <div className=\"ui two column padded centered grid \">\n                  <Modal.Actions>\n                    <Button\n                      onClick={cancelTaskAdd}\n                      className=\"center\"\n                      basic\n                      color=\"teal\"\n                    >\n                      <Icon name=\"close\" />\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={newTaskAdded}\n                      color=\"teal\"\n                      className=\"four wide column\"\n                    >\n                      Proceed <Icon name=\"right chevron\" />\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              </form>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal onClose={closeModal} open={secondOpen} size=\"small\">\n          <Modal.Content style={{ textAlign: 'center' }}>\n            <h2 className=\"ui centered icon teal header\">\n              <i className=\"circular check icon white\"></i>\n              <div className=\"content\">Task added successfully!</div>\n            </h2>\n          </Modal.Content>\n        </Modal>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddTask\n","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js",["126","127","128","129","130","131","132"],"import { useEffect, useState } from 'react'\nimport EditTask from '../components/EditTask'\nimport { selectTask } from '../redux/actions/index'\nimport AddTask from '../components/AddTask'\nimport Menu from '../components/Menu'\nimport BannerImage from '../components/BannerImage'\nimport { connect } from 'react-redux'\nimport { fetchTasks } from '../redux/actions/index'\nimport axios from 'axios'\nimport { Button, Icon } from 'semantic-ui-react'\nimport DeleteTask from '../components/DeleteTask'\n// import TaskDataService from '../services/taskService'\n\nconst Tasks = props => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [tasksList, setTasksList] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [listName, setListName] = useState('')\n\n  useEffect(() => {\n    console.log(user.result.googleId + ' user!' + tasksList + 'tasksList')\n    axios\n      .get('http://localhost:5000/task/' + user.result.googleId)\n      .then(response => {\n        setTasksList(response.data)\n        // console.log(\"tasks List: \" + response.data[0]._id)\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n\n    // axios\n    // .get('http://localhost:5000/task/' )\n    // .then(response => {\n    //   setTasksList(response.data)\n    //   // console.log(\"tasks List: \" + response.data[0]._id)\n    // })\n    // .catch(function (error) {\n    //   console.log(error);\n    // });\n  }, [props.match.params.id])\n\n  const deleteTask = id => {\n    axios.delete('http://localhost:5000/' + id).then(response => {\n      console.log(response.data + 'response data')\n    })\n\n    setTasksList(tasksList.filter(el => el._id !== id))\n  }\n\n  const updateTasksList = async () => {\n    await axios\n      .get('http://localhost:5000/task/' + user.result.googleId)\n      .then(response => {\n        setTasksList(response.data)\n        // console.log(\"tasks List: \" + response.data[0]._id)\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  const renderTasks = () => {\n    return tasksList.map(task => {\n      return (\n        <tr key={task._id} onClick={() => props.selectTask(task)}>\n          <td className=\"collapsing \">\n            <EditTask id={task._id} selectedTask={props.selectedTask} />\n            <Button\n              basic\n              color=\"teal\"\n              className=\"ui small teal icon\"\n              onClick={() => deleteTask(task._id)}\n            >\n              <Icon name=\"trash alternate\" />\n            </Button>\n          </td>\n          <td style={{ textAlign: 'center' }}>{task.taskTitle}</td>\n          <td style={{ textAlign: 'center' }}>\n            {task.taskStartTime} - {task.taskEndTime}\n          </td>\n          <td style={{ textAlign: 'center' }}>{task.notes}</td>\n        </tr>\n      )\n    })\n  }\n\n  return (\n    <>\n      <BannerImage />\n      <Menu />\n      <div className=\"ui bottom attached segment\">\n        <table className=\"ui compact teal celled definition table\">\n          <thead className=\"full-width\">\n            <tr>\n              <th></th>\n              <th style={{ textAlign: 'center' }}>Task</th>\n              <th style={{ textAlign: 'center' }}>Time</th>\n              <th style={{ textAlign: 'center' }}>Notes</th>\n            </tr>\n          </thead>\n          <tbody>{renderTasks()}</tbody>\n          <tfoot className=\"full-width\">\n            <tr>\n              <th></th>\n              <th colSpan=\"4\" style={{ textAlign: 'center' }}>\n                <AddTask\n                  user={user}\n                  renderTasks={renderTasks}\n                  updateTasksList={updateTasksList}\n                  tasksList={tasksList}\n                  setTasksList={setTasksList}\n                />\n                {console.log(`tl: ${tasksList}`)}\n                {/* <div className=\"ui right floated  buttons\">\n                <button className=\"ui teal button\">Edit Task</button>\n                <div className=\"or\"></div>\n                <button className=\"ui red button\">Delete Task</button>\n              </div> */}\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { selectedTask: state.selectedTask, tasks: state.tasks }\n}\n\nexport default connect(mapStateToProps, { selectTask, fetchTasks })(Tasks)\n","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Reminders.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Goals.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/LoginPage.js",["133","134","135","136","137"],"import { useState } from 'react'\nimport {  Image, Grid,  } from 'semantic-ui-react'\nimport Signup from '../auth/Signup'\nimport Login from '../auth/Login'\nimport img from '../media/hellbentLogo.png'\n// import GoogleAuth from '../auth/GoogleAuth'\n\n\n\nconst LoginPage = () => {\n  const [signupVisible, setSignupVisible] = useState(false)\n\n  return (\n    <>\n    <Image src={img} centered size=\"medium\" />\n          <div className=\"ui container\"  >\n    <Grid>\n    <div className=\"ui teal\" style={{ position: \"relative\", top: \"30%\", width: \"100%\"}}  >\n          {(signupVisible && <Signup />) || <Login />}\n          <div className=\"ui container\" style={{ position: \"relative\", marginTop: \"60px\", width: \"100%\"}}>\n          {(signupVisible && \"Already signed up?\" || \"New User?\")}\n          <span\n            style={{color: 'teal'}}\n            onClick={() => setSignupVisible(!signupVisible)}\n            className=\"ui basic teal pointer-cursor\"\n          >\n            <a href=\"#\" style={{color: 'teal', padding: '10px'}}  onClick={() => setSignupVisible(!signupVisible)}>\n            {(signupVisible && \"Login\" || \"Sign up\")}\n            </a>\n          </span>\n          </div>\n        </div>\n    </Grid>\n          </div>\n            </>\n  )\n}\n\nexport default LoginPage\n","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/BannerImage.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/actions/index.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/index.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js",["138","139"],"import { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Modal, Icon, TextArea } from 'semantic-ui-react'\nimport axios from 'axios'\n\nconst EditTask = props => {\n//   const [id, setId] = useState('')\n  const [taskTitle, setTaskTitle] = useState('')\n  const [taskStartTime, setTaskStartTime] = useState('')\n  const [taskEndTime, setTaskEndTime] = useState('')\n  const [notes, setNotes] = useState('')\n  const [triggerValue, setTriggerValue] = useState('')\n\n  useEffect((id) => {\n      setTriggerValue(props.selectedTask._id + 'trigger')\n\n      console.log('props.selectedTask.key' + props.selectedTask._id)\n    //   console.log(triggerValue)\n//     axios\n//       .get('http://localhost:5000/task/' + id)\n//       .then(response => {\n//         {\n//           setTitle(response.data.title)\n//         }\n//         {\n//           setStartTime(response.data.startTime)\n//         }\n//         {\n//           setEndTime(response.data.endTime)\n//         }\n//         {\n//           setNotes(response.data.notes)\n//         }\n//       })\n//       .catch(function (error) {\n//         console.log(error)\n//       })\n\n//     setId(props.selectedTask._id)\n//     console.log(`IMTHE ID: ${id}`)\n  })\n\n//   const updateValue = (e) => {\n//       const updatedTask = {\n//         setTitle: title,\n//         setStartTime: startTime,\n//         setEndTime: endTime,\n//         setNotes: notes\n//       }\n//   }\nconst updateTask = () => {\n//     // e.preventDefault()\n\n    const updatedTask = {\n        taskTitle: taskTitle,\n        taskStartTime: taskStartTime,\n        taskEndTime: taskEndTime,\n        notes: notes\n      }\n\n      axios\n        .post('http://localhost:5000/update/' + props.selectedTask._id, updatedTask)\n        .then(res => {\n            setTaskTitle(res.data.taskTitle)\n            setTaskStartTime(res.data.taskStartTime)\n            setTaskEndTime(res.data.taskEndTim)\n            setNotes(res.data.notes)\n        })\n        .catch(err => console.log(err))\n\n}\n\n\n  return (\n    <Modal\n      trigger={\n        <Button\n          className=\"ui small teal icon\"\n        //   onClick={console.log(props.selectedTask._id + 'im the real id')}\n        >\n          <i className=\"pencil icon\" />\n        </Button>\n        // <CreateEditTasks />\n       \n      }\n      header=\"Edit/Delete Task\"\n      //   content={props.selectedTask}\n      actions={['Snooze', { key: 'done', content: 'Done', positive: true }]}\n    >\n      <Modal.Header className=\"ui centered teal\">Edit Task</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <div className=\"ui raised segment\">\n            <form className=\"ui form\">\n              <div className=\"field\">\n                <label>\n                  <a href=\"/\" className=\"ui teal left ribbon label\">\n                    Task\n                  </a>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"task-name\"\n                  placeholder=\"\"\n                  defaultValue={props.selectedTask.taskTitle}\n                  onChange={e => setTaskTitle(e.target.value)}\n                  \n                />\n                {/* <TextArea>{props.selectedTask.title}</TextArea>  */}\n              </div>\n              <div className=\"field\">\n                <label>\n                  <a href=\"/\" className=\"ui teal left ribbon label\">\n                    Time\n                  </a>\n                </label>\n                <div className=\"ui three column stackable padded center aligned grid\">\n                  <div className=\"seven wide column\">\n                    <input\n                      type=\"time\"\n                      name=\"task-time\"\n                      placeholder=\"Task Time\"\n                      onChange={(e) => setTaskStartTime(e.target.value)}\n                      defaultValue={props.selectedTask.taskStartTime}\n                    />\n                  </div>\n                  <div className=\"two wide column ui horizontal divider\">\n                    To\n                  </div>\n                  <div className=\"seven wide column\">\n                    <input\n                      type=\"time\"\n                      name=\"task-time\"\n                      placeholder=\"Task Time\"\n                      onChange={e => setTaskEndTime(e.target.value)}\n                      defaultValue={props.selectedTask.taskEndTime}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Notes\n                    </a>\n                  </label>\n                  <div className=\"ui loading icon input\">\n                    <TextArea\n                      placeholder=\"\"\n                      onChange={e => setNotes(e.target.value)}\n                      defaultValue={props.selectedTask.notes}\n                    ></TextArea>\n                  </div>\n                  <div className=\"ui padded equal width grid\"></div>\n                </div>\n              </div>\n              <div className=\"ui two column padded centered grid \">\n                <Modal.Actions>\n                  <Button\n                    //   onClick={cancelTaskAdd}\n                    className=\"center\"\n                    basic\n                    color=\"teal\"\n                  >\n                    <Icon name=\"close\" />\n                    Cancel\n                  </Button>\n                  <Button\n                      onClick={() => updateTask(props.selectedTask.key)}\n                    color=\"teal\"\n                    className=\"four wide column\"\n                  >\n                    Save <Icon name=\"right chevron\" />\n                  </Button>\n                </Modal.Actions>\n              </div>\n            </form>\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { selectedTask: state.selectedTask }\n}\n\nexport default connect(mapStateToProps)(EditTask)\n","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/CreateEditTasks.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/auth.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/actionTypes/actionTypes.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/GoogleAuth.js",[],["140","141"],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Login.js",["142","143"],"import { useState } from 'react'\nimport { Grid, Button, Header, Input, Divider } from 'semantic-ui-react'\n// import img from '../media/hellbentLogo.png'\nimport Auth from './Auth'\n\nconst Login = () => {\n  const [passwordVisible, setPasswordVisible] = useState(false)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\nconsole.log(passwordVisible, username, password)\n  return (\n    <>\n      <Divider horizontal>\n        <Header as=\"h4\" color=\"teal\">\n          Login\n        </Header>\n      </Divider>\n      <div style={{ position: 'relative', top: '15%', width: '100%' }}>\n        <Grid.Column textAlign=\"center\">\n          <div className=\"ui grid centered\">\n            <div className=\"ui row\">\n              <Input\n                action={{\n                  icon: 'user',\n                  color: 'teal',\n                }}\n                onChange={(e) => {setUsername(e.target.value)}}\n                actionPosition=\"left\"\n                type=\"text\"\n                className=\"ui input\"\n                placeholder=\"Username\"\n              />\n            </div>\n\n            <div className=\"ui row\">\n              <Input\n                action={{\n                  icon: 'eye',\n                  color: 'teal',\n                  onClick: () => setPasswordVisible(!passwordVisible)\n                }}\n                onChange={(e) => {setPassword(e.target.value)}}\n                actionPosition=\"left\"\n                type={passwordVisible && \"password\" || 'text'}\n                className=\"ui input\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"ui row right floated\">\n              <Button color=\"teal\">Login</Button>\n              <Auth />\n            </div>\n          </div>\n        </Grid.Column>\n      </div>\n   \n      \n    </>\n  )\n}\n\nexport default Login\n","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Signup.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/auth/Auth.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/DeleteTask.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/apis/db.js",[],"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/tabsReducer.js",["144"],"export default () => {\n        return [\n            { tasks: 'active' }, \n            { goals: 'goals' }, \n            { notes: 'notes' }\n        ]\n}","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/selectedTaskReducer.js",["145"],"export default (selectedTask='null', action) => {\n        if (action.type === 'TASK_SELECTED') {\n            return action.payload;\n        }\n    \n        return selectedTask;\n}","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/selectedTabReducer.js",["146"],"export default (selectedTab='tasks', action) => {\n    if (action.type === 'TAB_SELECTED') {\n                return action.payload;\n            }\n        \n            return selectedTab;\n        \n}","/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/redux/reducers/tasksReducer.js",["147"],"export default (state = [], action) => {\n\n    switch (action.type) {\n        case 'FETCH_TASKS':\n            return action.payload;\n        case 'ADD_TASK':\n            return [...state,\n                action.payload];\n        case 'DELETE_TASK':\n            return [...state,\n                action.payload];\n        default: \n            return state\n    }\n\n}",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":18,"nodeType":"154","messageId":"155","endLine":7,"endColumn":27},{"ruleId":"148","replacedBy":"156"},{"ruleId":"150","replacedBy":"157"},{"ruleId":"152","severity":1,"message":"158","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"159","line":8,"column":16,"nodeType":"154","messageId":"155","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"160","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":18},{"ruleId":"152","severity":1,"message":"159","line":15,"column":16,"nodeType":"154","messageId":"155","endLine":15,"endColumn":23},{"ruleId":"152","severity":1,"message":"161","line":17,"column":10,"nodeType":"154","messageId":"155","endLine":17,"endColumn":15},{"ruleId":"152","severity":1,"message":"162","line":17,"column":17,"nodeType":"154","messageId":"155","endLine":17,"endColumn":25},{"ruleId":"152","severity":1,"message":"163","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":18},{"ruleId":"152","severity":1,"message":"164","line":18,"column":20,"nodeType":"154","messageId":"155","endLine":18,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":41,"column":6,"nodeType":"167","endLine":41,"endColumn":29,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":21,"column":27,"nodeType":"171","messageId":"172","endLine":21,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":21,"column":51,"nodeType":"171","messageId":"172","endLine":21,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":27,"column":13,"nodeType":"175","endLine":27,"endColumn":116},{"ruleId":"169","severity":1,"message":"170","line":28,"column":29,"nodeType":"171","messageId":"172","endLine":28,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":28,"column":40,"nodeType":"171","messageId":"172","endLine":28,"endColumn":42},{"ruleId":"152","severity":1,"message":"176","line":12,"column":10,"nodeType":"154","messageId":"155","endLine":12,"endColumn":22},{"ruleId":"165","severity":1,"message":"177","line":14,"column":3,"nodeType":"154","endLine":14,"endColumn":12,"suggestions":"178"},{"ruleId":"148","replacedBy":"179"},{"ruleId":"150","replacedBy":"180"},{"ruleId":"169","severity":1,"message":"170","line":44,"column":39,"nodeType":"171","messageId":"172","endLine":44,"endColumn":41},{"ruleId":"169","severity":1,"message":"170","line":44,"column":53,"nodeType":"171","messageId":"172","endLine":44,"endColumn":55},{"ruleId":"181","severity":1,"message":"182","line":1,"column":1,"nodeType":"183","endLine":7,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":1,"column":1,"nodeType":"183","endLine":7,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":1,"column":1,"nodeType":"183","endLine":8,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":1,"column":1,"nodeType":"183","endLine":16,"endColumn":2},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar",["184"],["185"],"'useEffect' is defined but never used.","'setUser' is assigned a value but never used.","'DeleteTask' is defined but never used.","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","'listName' is assigned a value but never used.","'setListName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'tasksList' and 'user.result.googleId'. Either include them or remove the dependency array.","ArrayExpression",["186"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'triggerValue' is assigned a value but never used.","React Hook useEffect contains a call to 'setTriggerValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.selectedTask._id] as a second argument to the useEffect Hook.",["187"],["184"],["185"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [props.match.params.id, tasksList, user.result.googleId]",{"range":"192","text":"193"},"Add dependencies array: [props.selectedTask._id]",{"range":"194","text":"195"},[1436,1459],"[props.match.params.id, tasksList, user.result.googleId]",[1230,1230],", [props.selectedTask._id]"]