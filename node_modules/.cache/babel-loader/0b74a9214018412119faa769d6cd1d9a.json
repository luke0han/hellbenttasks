{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Icon, Modal, TextArea } from 'semantic-ui-react';\nimport axios from 'axios';\nimport TaskDataService from '../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTask = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [firstOpen, setFirstOpen] = React.useState(false);\n  const [secondOpen, setSecondOpen] = React.useState(false);\n  const [task, setTask] = useState('');\n  const [toTime, setToTime] = useState('');\n  const [fromTime, setFromTime] = useState('');\n  const [notes, setNotes] = useState('');\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskStartTime, setTaskStartTime] = useState('');\n  const [taskEndTime, setTaskEndTime] = useState('');\n  const [addNewTask, setAddNewTask] = useState({\n    id: user.result.googleId,\n    taskTitle: '',\n    taskStartTime: '',\n    taskEndTime: '',\n    notes: ''\n  });\n\n  const handleChange = e => {\n    console.log(e.target);\n    const {\n      name,\n      value\n    } = e.target;\n    setAddNewTask(prevAddNewTask => {\n      return { ...prevAddNewTask,\n        [name]: value\n      };\n    });\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    console.log(addNewTask);\n  }; // console.log(addNewTask)\n  // const [newTask, setNewTask] = useState(addNewTask)\n  // const getTask = id => {\n  //   TaskDataService.get(id)\n  //   .then(response => {\n  //     setTask(response.data)\n  //     console.log(response.data)\n  //   })\n  //   .catch(err => {\n  //     console.log(err)\n  //   })\n  // }\n  // useEffect(() => {\n  //   getTask()\n  // })\n  // const onTaskChange = e => {\n  //   console.log(task)\n  //   setTask(e.target.value)\n  // }\n  // const onPriorityChange = e => {\n  //   setPriority(e.target.value)\n  // }\n  // const onFromTimeChange = (e) => {\n  //   setFromTime(e.target.value)\n  // }\n  // const onToTimeChange = (e) => {\n  //   setToTime(e.target.value)\n  // }\n  // const onFormSubmit = e => {\n  //   e.preventDefault()\n  // }\n\n\n  console.log(task, fromTime, toTime, notes);\n\n  const onAddTask = e => {\n    e.preventDefault();\n  };\n\n  const cancelTaskAdd = () => {\n    setSecondOpen(false);\n    setFirstOpen(false);\n  };\n\n  const newTaskAdded = () => {\n    setFirstOpen(true);\n    setSecondOpen(true);\n    setTimeout(() => {\n      setSecondOpen(false);\n      setFirstOpen(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"ui small teal labeled icon button\",\n      onClick: () => setFirstOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"plus icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \" Add New Task\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setFirstOpen(false),\n      onOpen: () => setFirstOpen(true),\n      open: firstOpen,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"ui centered teal\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui raised segment\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"ui form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: handleChange,\n                  type: \"text\",\n                  name: \"taskTitle\",\n                  placeholder: \"Task Name\",\n                  value: input.taskTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui three column stackable padded center aligned grid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seven wide column\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      name: \"taskStartTime\",\n                      placeholder: \"Task Time\",\n                      onChange: handleChange,\n                      value: addNewTask.fromTime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"two wide column ui horizontal divider\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seven wide column\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      name: \"taskEndTime\",\n                      placeholder: \"Task Time\",\n                      onChange: handleChange,\n                      value: addNewTask.toTime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"/\",\n                      className: \"ui teal left ribbon label\",\n                      children: \"Notes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"ui loading icon input\",\n                    children: /*#__PURE__*/_jsxDEV(TextArea, {\n                      name: \"notes\",\n                      placeholder: \"Add notes about your task...\",\n                      onChange: handleChange,\n                      value: addNewTask.notes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ui padded equal width grid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui two column padded centered grid \",\n                children: /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handleClick,\n                    className: \"center\",\n                    basic: true,\n                    color: \"teal\",\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this), \"Cancel\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: onAddTask,\n                    color: \"teal\",\n                    className: \"four wide column\",\n                    children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"right chevron\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setSecondOpen(false),\n        open: secondOpen,\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"ui centered icon teal header\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"circular check icon white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"Task added successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTask, \"ht9KgAfYuyP3tAV6Bw7WbZ3pt7s=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js"],"names":["React","useState","useEffect","Button","Icon","Modal","TextArea","axios","TaskDataService","AddTask","user","setUser","JSON","parse","localStorage","getItem","firstOpen","setFirstOpen","secondOpen","setSecondOpen","task","setTask","toTime","setToTime","fromTime","setFromTime","notes","setNotes","taskTitle","setTaskTitle","taskStartTime","setTaskStartTime","taskEndTime","setTaskEndTime","addNewTask","setAddNewTask","id","result","googleId","handleChange","e","console","log","target","name","value","prevAddNewTask","handleClick","preventDefault","onAddTask","cancelTaskAdd","newTaskAdded","setTimeout","input","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Icon, Modal, TextArea } from 'semantic-ui-react'\nimport axios from 'axios'\nimport TaskDataService from '../services/taskService'\n\n\nconst AddTask = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))  \n  const [firstOpen, setFirstOpen] = React.useState(false)\n  const [secondOpen, setSecondOpen] = React.useState(false)\n  const [task, setTask] = useState('')\n  const [toTime, setToTime] = useState('')\n  const [fromTime, setFromTime] = useState('')\n  const [notes, setNotes] = useState('')\n  const [taskTitle, setTaskTitle] = useState('')\n  const [taskStartTime, setTaskStartTime] = useState('')\n  const [taskEndTime, setTaskEndTime] = useState('')\n\n  const [addNewTask, setAddNewTask] = useState ({\n    id: user.result.googleId,\n    taskTitle: '',\n    taskStartTime: '',\n    taskEndTime: '',\n    notes: ''\n  })\n\n  const handleChange = (e) => {\n    console.log(e.target)\n    const {name, value} = e.target\n\n    setAddNewTask(prevAddNewTask => {\n      return { \n        ...prevAddNewTask,\n        [name]: value\n      }\n    })\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    console.log(addNewTask)\n  }\n\n\n  // console.log(addNewTask)\n\n  // const [newTask, setNewTask] = useState(addNewTask)\n  // const getTask = id => {\n  //   TaskDataService.get(id)\n  //   .then(response => {\n  //     setTask(response.data)\n  //     console.log(response.data)\n  //   })\n  //   .catch(err => {\n  //     console.log(err)\n  //   })\n  // }\n\n  // useEffect(() => {\n  //   getTask()\n  // })\n  // const onTaskChange = e => {\n\n  //   console.log(task)\n  //   setTask(e.target.value)\n  // }\n\n  // const onPriorityChange = e => {\n  //   setPriority(e.target.value)\n  // }\n\n  // const onFromTimeChange = (e) => {\n  //   setFromTime(e.target.value)\n  // }\n\n  // const onToTimeChange = (e) => {\n  //   setToTime(e.target.value)\n  // }\n\n  // const onFormSubmit = e => {\n  //   e.preventDefault()\n  // }\n\n  console.log(task, fromTime, toTime, notes)\n  const onAddTask = e => {\n    e.preventDefault()\n   \n  }\n\n  const cancelTaskAdd = () => {\n    setSecondOpen(false)\n    setFirstOpen(false)\n  }\n\n  const newTaskAdded = () => {\n    setFirstOpen(true)\n    setSecondOpen(true)\n\n    setTimeout(() => {\n      setSecondOpen(false)\n      setFirstOpen(false)\n    }, 3000)\n  }\n  return (\n    <>\n      <Button\n        className=\"ui small teal labeled icon button\"\n        onClick={() => setFirstOpen(true)}\n      >\n        <i className=\"plus icon\" /> Add New Task\n      </Button>\n\n      <Modal\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header className=\"ui centered teal\">Add New Task</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <div className=\"ui raised segment\">\n              <form className=\"ui form\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Task\n                    </a>\n                  </label>\n                  <input\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"taskTitle\"\n                    placeholder=\"Task Name\"\n                    value={input.taskTitle}\n                  />\n                </div>\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Time\n                    </a>\n                  </label>\n                  <div className=\"ui three column stackable padded center aligned grid\">\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskStartTime\"\n                        placeholder=\"Task Time\"\n                        onChange={handleChange}\n                        value={addNewTask.fromTime}\n                      />\n                    </div>\n                    <div className=\"two wide column ui horizontal divider\">\n                      To\n                    </div>\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskEndTime\"\n                        placeholder=\"Task Time\"\n                        onChange={handleChange}\n                        value={addNewTask.toTime}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"field\">\n                    <label>\n                      <a href=\"/\" className=\"ui teal left ribbon label\">\n                        Notes\n                      </a>\n                    </label>\n                    <div class=\"ui loading icon input\">\n                      <TextArea\n                        name=\"notes\"\n                        placeholder=\"Add notes about your task...\"\n                        onChange={handleChange}\n                        value={addNewTask.notes}\n                      />\n                    </div>\n                    <div className=\"ui padded equal width grid\"></div>\n                  </div>\n                </div>\n                <div className=\"ui two column padded centered grid \">\n                  <Modal.Actions>\n                    <Button\n                      onClick={handleClick}\n                      className=\"center\"\n                      basic\n                      color=\"teal\"\n                    >\n                      <Icon name=\"close\" />\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={onAddTask}\n                      color=\"teal\"\n                      className=\"four wide column\"\n                    >\n                      Proceed <Icon name=\"right chevron\" />\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              </form>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal\n          onClose={() => setSecondOpen(false)}\n          open={secondOpen}\n          size=\"small\"\n        >\n          <Modal.Content style={{ textAlign: 'center' }}>\n            <h2 className=\"ui centered icon teal header\">\n              <i className=\"circular check icon white\"></i>\n              <div className=\"content\">Task added successfully!</div>\n            </h2>\n          </Modal.Content>\n        </Modal>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddTask\n"]},"metadata":{},"sourceType":"module"}