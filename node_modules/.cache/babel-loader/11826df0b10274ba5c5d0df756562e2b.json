{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js\";\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Modal, Icon, TextArea } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTask = props => {\n  // const [taskTitle, setTaskTitle] = useState('')\n  // useEffect(() => {\n  //     axios\n  //   .get(\"http://localhost:5000/task/\" + props.match.params.id)\n  //   .then((response) => {\n  //             {props.setTaskTitle(response.data.taskTitle)}\n  //             {props.setTaskStartTime(response.data.taskStartTime)}\n  //             {props.setTaskEndTime(response.data.taskEndTime)}\n  //             {props.setNotes(response.data.notes)}\n  //   })\n  //   .catch(function (error) {\n  //     console.log(error);\n  //   });\n  // })\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"ui small teal icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pencil icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) // <CreateEditTasks />\n    ,\n    header: \"Edit/Delete Task\",\n    content: props.selectedTask,\n    actions: ['Snooze', {\n      key: 'done',\n      content: 'Done',\n      positive: true\n    }],\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"ui centered teal\",\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui raised segment\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"ui form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"task-name\",\n                placeholder: \"\",\n                onChange: e => setTaskTitle(e.target.value),\n                value: props.selectedTask.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                children: props.selectedTask.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui three column stackable padded center aligned grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\",\n                    onChange: e => setStartTime(e.target.value),\n                    value: props.selectedTask.startTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"two wide column ui horizontal divider\",\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\",\n                    onChange: e => setEndTime(e.target.value),\n                    value: props.selectedTask.endTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui loading icon input\",\n                  children: /*#__PURE__*/_jsxDEV(TextArea, {\n                    placeholder: \"\",\n                    value: props.selectedTask.notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui padded equal width grid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two column padded centered grid \",\n              children: /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                children: [/*#__PURE__*/_jsxDEV(Button //   onClick={cancelTaskAdd}\n                , {\n                  className: \"center\",\n                  basic: true,\n                  color: \"teal\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), \"Cancel\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button //   onClick={() => newTaskAdded()}\n                , {\n                  color: \"teal\",\n                  className: \"four wide column\",\n                  children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"right chevron\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditTask;\n\nconst mapStateToProps = state => {\n  return {\n    selectedTask: state.selectedTask\n  };\n};\n\nexport default connect(mapStateToProps)(EditTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js"],"names":["useState","useEffect","connect","Button","Modal","Icon","TextArea","axios","EditTask","props","selectedTask","key","content","positive","e","setTaskTitle","target","value","title","setStartTime","startTime","setEndTime","endTime","notes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Modal, Icon, TextArea } from 'semantic-ui-react'\nimport axios from 'axios'\n\n\n\nconst EditTask = (props) => {\n\n    // const [taskTitle, setTaskTitle] = useState('')\n\n    // useEffect(() => {\n    //     axios\n    //   .get(\"http://localhost:5000/task/\" + props.match.params.id)\n    //   .then((response) => {\n    //             {props.setTaskTitle(response.data.taskTitle)}\n    //             {props.setTaskStartTime(response.data.taskStartTime)}\n    //             {props.setTaskEndTime(response.data.taskEndTime)}\n    //             {props.setNotes(response.data.notes)}\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n    // })\n\n   \n  return (\n    <Modal\n      trigger={\n        <Button className=\"ui small teal icon\">\n          <i className=\"pencil icon\" />\n        </Button>\n        // <CreateEditTasks />\n      }\n      header=\"Edit/Delete Task\"\n      content={props.selectedTask}\n      actions={['Snooze', { key: 'done', content: 'Done', positive: true }]}\n    >\n         <Modal.Header className=\"ui centered teal\">Edit Task</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <div className=\"ui raised segment\">\n            <form className=\"ui form\">\n              <div className=\"field\">\n                <label>\n                  <a href=\"/\" className=\"ui teal left ribbon label\">\n                    Task\n                  </a>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"task-name\"\n                  placeholder=\"\"\n                  onChange={e => setTaskTitle(e.target.value)}\n                  value={props.selectedTask.title}\n                />\n                <TextArea>{props.selectedTask.title}</TextArea> \n              </div>\n              <div className=\"field\">\n                <label>\n                  <a href=\"/\" className=\"ui teal left ribbon label\">\n                    Time\n                  </a>\n                </label>\n                <div className=\"ui three column stackable padded center aligned grid\">\n                  <div className=\"seven wide column\">\n                    <input\n                      type=\"time\"\n                      name=\"task-time\"\n                      placeholder=\"Task Time\"\n                      onChange={e => setStartTime(e.target.value)}\n                      value={props.selectedTask.startTime}\n                    />\n                  </div>\n                  <div className=\"two wide column ui horizontal divider\">\n                    To\n                  </div>\n                  <div className=\"seven wide column\">\n                    <input\n                      type=\"time\"\n                      name=\"task-time\"\n                      placeholder=\"Task Time\"\n                      onChange={e => setEndTime(e.target.value)}\n                      value={props.selectedTask.endTime}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Notes\n                    </a>\n                  </label>\n                  <div className=\"ui loading icon input\">\n                    <TextArea\n                      placeholder=\"\"\n                      value={props.selectedTask.notes}\n                    ></TextArea>\n                  </div>\n                  <div className=\"ui padded equal width grid\"></div>\n                </div>\n              </div>\n              <div className=\"ui two column padded centered grid \">\n                <Modal.Actions>\n                  <Button\n                    //   onClick={cancelTaskAdd}\n                    className=\"center\"\n                    basic\n                    color=\"teal\"\n                  >\n                    <Icon name=\"close\" />\n                    Cancel\n                  </Button>\n                  <Button\n                    //   onClick={() => newTaskAdded()}\n                    color=\"teal\"\n                    className=\"four wide column\"\n                  >\n                    Save <Icon name=\"right chevron\" />\n                  </Button>\n                </Modal.Actions>\n              </div>\n            </form>\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { selectedTask: state.selectedTask }\n}\n\nexport default connect(mapStateToProps)(EditTask)\n"]},"metadata":{},"sourceType":"module"}