{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport EditTask from '../components/EditTask';\nimport { selectTask } from '../redux/actions/index';\nimport AddTask from '../components/AddTask';\nimport Menu from '../components/Menu';\nimport BannerImage from '../components/BannerImage';\nimport { connect } from 'react-redux';\nimport axios from 'axios'; // import TaskDataService from '../services/taskService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [tasksList, setTasksList] = useState([]);\n  useEffect(() => {\n    axios.get('/task').then(response => {\n      setTasksList({\n        tasksList: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    renderTaskList(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const renderTaskList = () => {};\n\n  const renderTasks = () => {\n    return props.taskList.taskList.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => props.selectTask(task),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"collapsing \",\n          children: /*#__PURE__*/_jsxDEV(EditTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [task.startTime, \"-\", task.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: task.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(props), /*#__PURE__*/_jsxDEV(BannerImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui bottom attached segment\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ui compact teal celled definition table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(AddTask, {\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tasks, \"wCQBjKQOutJUjkd/7g5yCtfVpP4=\");\n\n_c = Tasks;\n\nconst mapStateToProps = state => {\n  return {\n    taskList: state.taskList,\n    selectedTask: state.selectedTask\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectTask\n})(Tasks);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js"],"names":["useEffect","useState","EditTask","selectTask","AddTask","Menu","BannerImage","connect","axios","Tasks","props","user","setUser","tasksList","setTasksList","get","then","response","data","catch","error","console","log","renderTaskList","match","params","id","renderTasks","taskList","map","task","textAlign","title","startTime","endTime","notes","mapStateToProps","state","selectedTask"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport EditTask from '../components/EditTask'\nimport { selectTask } from '../redux/actions/index'\nimport AddTask from '../components/AddTask'\nimport Menu from '../components/Menu'\nimport BannerImage from '../components/BannerImage'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\n// import TaskDataService from '../services/taskService'\n\nconst Tasks = props => {\n  const [user, setUser] = useState(null)\n  const [tasksList, setTasksList] = useState([])\n\n  useEffect(() => {\n    axios\n      .get('/task')\n      .then(response => {\n        setTasksList({ tasksList: response.data })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n   \n    renderTaskList(props.match.params.id)\n  }, [props.match.params.id])\n\n  const renderTaskList = () => {\n\n  }\n\n  const renderTasks = () => {\n    \n    return props.taskList.taskList.map(task => {\n      return (\n        <tr key={task.id} onClick={() => props.selectTask(task)}>\n          <td className=\"collapsing \">\n            <EditTask />\n          </td>\n          <td style={{ textAlign: 'center' }}>{task.title}</td>\n          <td style={{ textAlign: 'center' }}>\n            {task.startTime}-{task.endTime}\n          </td>\n          <td style={{ textAlign: 'center' }}>{task.notes}</td>\n        </tr>\n      )\n    })\n  }\n\n  return (\n    <>\n      {console.log(props)}\n      <BannerImage />\n      <Menu />\n      <div className=\"ui bottom attached segment\">\n        <table className=\"ui compact teal celled definition table\">\n          <thead className=\"full-width\">\n            <tr>\n              <th></th>\n              <th style={{ textAlign: 'center' }}>Task</th>\n              <th style={{ textAlign: 'center' }}>Time</th>\n              <th style={{ textAlign: 'center' }}>Notes</th>\n            </tr>\n          </thead>\n          <tbody>{renderTasks()}</tbody>\n          <tfoot className=\"full-width\">\n            <tr>\n              <th></th>\n              <th colSpan=\"4\" style={{ textAlign: 'center' }}>\n                <AddTask user={user} />\n\n                {/* <div className=\"ui right floated  buttons\">\n                <button className=\"ui teal button\">Edit Task</button>\n                <div className=\"or\"></div>\n                <button className=\"ui red button\">Delete Task</button>\n              </div> */}\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { taskList: state.taskList, selectedTask: state.selectedTask, }\n}\n\nexport default connect(mapStateToProps, { selectTask })(Tasks)\n"]},"metadata":{},"sourceType":"module"}