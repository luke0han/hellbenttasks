{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTask = () => {\n  _s();\n\n  const [firstOpen, setFirstOpen] = React.useState(false);\n  const [secondOpen, setSecondOpen] = React.useState(false);\n\n  const newTaskAdded = () => {\n    setFirstOpen(false);\n    setSecondOpen(true);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div class=\"ui active fullscreen modal\">\n    //   <div class=\"header centered\">Add New Task</div>\n    //   <div class=\"content\">\n    //     <p></p>\n    //   </div>\n    //   <div class=\"actions\">\n    //     <div class=\"ui approve button\">Approve</div>\n    //     <div class=\"ui button\">Neutral</div>\n    //     <div class=\"ui cancel button\">Cancel</div>\n    //   </div>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"ui small teal labeled icon button\",\n        onClick: () => setFirstOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"plus icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 96\n        }, this), \" Add New Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setFirstOpen(false),\n        onOpen: () => setFirstOpen(true),\n        open: firstOpen,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          image: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"right arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your task here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => newTaskAdded(),\n            primary: true,\n            children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"right chevron\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          onClose: () => setSecondOpen(false),\n          open: secondOpen,\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n            style: {\n              backgroundColor: 'rgba(30, 250, 22, 0.2)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Task added successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"check\",\n              content: \"All Done\",\n              onClick: () => setSecondOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_s(AddTask, \"jLQNSAOzagU3CqMp9IQ2qrBd2o0=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js"],"names":["React","useState","Button","Icon","Modal","AddTask","firstOpen","setFirstOpen","secondOpen","setSecondOpen","newTaskAdded","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Button, Icon, Modal } from 'semantic-ui-react'\n\nconst AddTask = () => {\n    const [firstOpen, setFirstOpen] = React.useState(false)\n  const [secondOpen, setSecondOpen] = React.useState(false)\n\n  const newTaskAdded = () => {\n    setFirstOpen(false) \n    setSecondOpen(true)\n  }\n  return (\n    // <div class=\"ui active fullscreen modal\">\n    //   <div class=\"header centered\">Add New Task</div>\n    //   <div class=\"content\">\n    //     <p></p>\n    //   </div>\n    //   <div class=\"actions\">\n    //     <div class=\"ui approve button\">Approve</div>\n    //     <div class=\"ui button\">Neutral</div>\n    //     <div class=\"ui cancel button\">Cancel</div>\n    //   </div>\n    // </div>\n\n    <>\n      <Button className=\"ui small teal labeled icon button\" onClick={() => setFirstOpen(true)}><i className=\"plus icon\"></i> Add New Task</Button>\n\n      <Modal\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header>Add New Task</Modal.Header>\n        <Modal.Content image>\n          <div className='image'>\n            <Icon name='right arrow' />\n          </div>\n          <Modal.Description>\n            <p>Enter your task here!</p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => newTaskAdded()} primary>\n            Proceed <Icon name='right chevron' />\n          </Button>\n        </Modal.Actions>\n\n        <Modal\n          onClose={() => setSecondOpen(false)}\n          open={secondOpen}\n          size='small'\n        >\n          <Modal.Header >Success</Modal.Header>\n          <Modal.Content style={{backgroundColor: 'rgba(30, 250, 22, 0.2)'}}>\n            <p>Task added successfully!</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              icon='check'\n              content='All Done'\n              onClick={() => setSecondOpen(false)}\n            />\n             </Modal.Actions>\n        </Modal>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddTask"]},"metadata":{},"sourceType":"module"}