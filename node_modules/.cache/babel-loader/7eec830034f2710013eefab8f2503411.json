{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Icon, Modal, TextArea } from 'semantic-ui-react';\nimport axios from 'axios'; // import e from 'express'\n// import TaskDataService from '../services/taskService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [firstOpen, setFirstOpen] = useState(false);\n  const [secondOpen, setSecondOpen] = useState(false);\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskStartTime, setTaskStartTime] = useState('');\n  const [taskEndTime, setTaskEndTime] = useState('');\n  const [notes, setNotes] = useState(''); // const id = user.result.googleId\n\n  const clearTaskForm = () => {\n    setTaskTitle('');\n    setTaskStartTime('');\n    setTaskEndTime('');\n    setNotes('');\n  };\n\n  const cancelTaskAdd = () => {\n    setSecondOpen(false);\n    setFirstOpen(false);\n  };\n\n  const closeModal = () => {\n    setSecondOpen(false);\n    clearTaskForm();\n    setTimeout(() => {\n      setSecondOpen(false);\n      setFirstOpen(false);\n    }, 1000);\n  };\n\n  const newTaskAdded = e => {\n    e.preventDefault();\n    const newTask = {\n      id: user.result.googleId,\n      taskTitle: taskTitle,\n      taskStartTime: taskStartTime,\n      taskEndTime: taskEndTime,\n      notes: notes\n    };\n    axios.post('http://localhost:5000/task/add', newTask).then(res => props.renderTasks());\n    setFirstOpen(true);\n    setSecondOpen(true);\n    setTimeout(() => {\n      setSecondOpen(false);\n      setFirstOpen(false);\n    }, 1000);\n    props.updateTasksList();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"ui small teal labeled icon button\",\n      onClick: () => setFirstOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"plus icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" Add New Task\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setFirstOpen(false),\n      onOpen: () => setFirstOpen(true),\n      open: firstOpen,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"ui centered teal\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui raised segment\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"ui form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setTaskTitle(e.target.value),\n                  type: \"text\",\n                  name: \"taskTitle\",\n                  placeholder: \"Task Name\",\n                  value: taskTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui three column stackable padded center aligned grid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seven wide column\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      name: \"taskStartTime\",\n                      placeholder: \"Task Time\",\n                      onChange: e => setTaskStartTime(e.target.value),\n                      value: taskStartTime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"two wide column ui horizontal divider\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seven wide column\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      name: \"taskEndTime\",\n                      placeholder: \"Task Time\",\n                      onChange: e => setTaskEndTime(e.target.value),\n                      value: taskEndTime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"/\",\n                      className: \"ui teal left ribbon label\",\n                      children: \"Notes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ui loading icon input\",\n                    name: \"notes\",\n                    children: /*#__PURE__*/_jsxDEV(TextArea, {\n                      name: \"notes\",\n                      placeholder: \"Add notes about your task...\",\n                      onChange: e => setNotes(e.target.value),\n                      value: notes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ui padded equal width grid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui two column padded centered grid \",\n                children: /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: cancelTaskAdd,\n                    className: \"center\",\n                    basic: true,\n                    color: \"teal\",\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 23\n                    }, this), \"Cancel\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: newTaskAdded,\n                    color: \"teal\",\n                    className: \"four wide column\",\n                    children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"right chevron\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: closeModal,\n        open: secondOpen,\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"ui centered icon teal header\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"circular check icon white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"Task added successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTask, \"JVeMWiAd9Tj4KraN4uOGsGNmOr8=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/AddTask.js"],"names":["React","useState","useEffect","Button","Icon","Modal","TextArea","axios","AddTask","props","user","setUser","JSON","parse","localStorage","getItem","firstOpen","setFirstOpen","secondOpen","setSecondOpen","taskTitle","setTaskTitle","taskStartTime","setTaskStartTime","taskEndTime","setTaskEndTime","notes","setNotes","clearTaskForm","cancelTaskAdd","closeModal","setTimeout","newTaskAdded","e","preventDefault","newTask","id","result","googleId","post","then","res","renderTasks","updateTasksList","target","value","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Icon, Modal, TextArea } from 'semantic-ui-react'\nimport axios from 'axios'\n// import e from 'express'\n// import TaskDataService from '../services/taskService'\n\nconst AddTask = props => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [firstOpen, setFirstOpen] = useState(false)\n  const [secondOpen, setSecondOpen] = useState(false)\n  const [taskTitle, setTaskTitle] = useState('')\n  const [taskStartTime, setTaskStartTime] = useState('')\n  const [taskEndTime, setTaskEndTime] = useState('')\n  const [notes, setNotes] = useState('')\n  // const id = user.result.googleId\n\n  const clearTaskForm = () => {\n    setTaskTitle('')\n    setTaskStartTime('')\n    setTaskEndTime('')\n    setNotes('')\n  }\n\n  const cancelTaskAdd = () => {\n    setSecondOpen(false)\n    setFirstOpen(false)\n  }\n\n  const closeModal = () => {\n    setSecondOpen(false)\n    clearTaskForm()\n\n    setTimeout(() => {\n      setSecondOpen(false)\n      setFirstOpen(false)\n    }, 1000)\n  }\n\n  const newTaskAdded = e => {\n    e.preventDefault()\n\n    const newTask = {\n      id: user.result.googleId,\n      taskTitle: taskTitle,\n      taskStartTime: taskStartTime,\n      taskEndTime: taskEndTime,\n      notes: notes,\n    }\n\n    axios\n      .post('http://localhost:5000/task/add', newTask)\n      .then(res => props.renderTasks())\n\n    setFirstOpen(true)\n    setSecondOpen(true)\n\n    setTimeout(() => {\n      setSecondOpen(false)\n      setFirstOpen(false)\n    }, 1000)\n\n    props.updateTasksList()\n  }\n\n  return (\n    <>\n      <Button\n        className=\"ui small teal labeled icon button\"\n        onClick={() => setFirstOpen(true)}\n      >\n        <i className=\"plus icon\" /> Add New Task\n      </Button>\n\n      <Modal\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header className=\"ui centered teal\">Add New Task</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <div className=\"ui raised segment\">\n              <form className=\"ui form\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Task\n                    </a>\n                  </label>\n                  <input\n                    onChange={e => setTaskTitle(e.target.value)}\n                    type=\"text\"\n                    name=\"taskTitle\"\n                    placeholder=\"Task Name\"\n                    value={taskTitle}\n                  />\n                </div>\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Time\n                    </a>\n                  </label>\n                  <div className=\"ui three column stackable padded center aligned grid\">\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskStartTime\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setTaskStartTime(e.target.value)}\n                        value={taskStartTime}\n                      />\n                    </div>\n                    <div className=\"two wide column ui horizontal divider\">\n                      To\n                    </div>\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"taskEndTime\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setTaskEndTime(e.target.value)}\n                        value={taskEndTime}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"field\">\n                    <label>\n                      <a href=\"/\" className=\"ui teal left ribbon label\">\n                        Notes\n                      </a>\n                    </label>\n                    <div className=\"ui loading icon input\" name=\"notes\">\n                      <TextArea\n                        name=\"notes\"\n                        placeholder=\"Add notes about your task...\"\n                        onChange={e => setNotes(e.target.value)}\n                        value={notes}\n                      />\n                    </div>\n                    <div className=\"ui padded equal width grid\"></div>\n                  </div>\n                </div>\n                <div className=\"ui two column padded centered grid \">\n                  <Modal.Actions>\n                    <Button\n                      onClick={cancelTaskAdd}\n                      className=\"center\"\n                      basic\n                      color=\"teal\"\n                    >\n                      <Icon name=\"close\" />\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={newTaskAdded}\n                      color=\"teal\"\n                      className=\"four wide column\"\n                    >\n                      Proceed <Icon name=\"right chevron\" />\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              </form>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal onClose={closeModal} open={secondOpen} size=\"small\">\n          <Modal.Content style={{ textAlign: 'center' }}>\n            <h2 className=\"ui centered icon teal header\">\n              <i className=\"circular check icon white\"></i>\n              <div className=\"content\">Task added successfully!</div>\n            </h2>\n          </Modal.Content>\n        </Modal>\n      </Modal>\n    </>\n  )\n}\n\nexport default AddTask\n"]},"metadata":{},"sourceType":"module"}