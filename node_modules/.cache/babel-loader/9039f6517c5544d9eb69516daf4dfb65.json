{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectTab } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Menu = props => {\n  _s();\n\n  const [taskName, setTaskName] = useState('active');\n  const [goalsName, setGoalsName] = useState('');\n  const [remindersName, setRemindersName] = useState('');\n\n  const taskTab = () => {\n    setTaskName('active');\n    setGoalsName('');\n    setRemindersName('');\n  };\n\n  function goalTab() {\n    setGoalsName('active');\n    setTaskName('');\n    setRemindersName('');\n  }\n\n  function remindTab() {\n    setRemindersName('active');\n    setTaskName('');\n    setGoalsName('');\n  }\n\n  const renderMenu = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui top attached tabular menu\",\n      children: [props.tabs.map(tab => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${tab.tabName}`,\n          className: `item ${props.selectTab.tabName && 'active' || ''}`,\n          onClick: () => props.selectTab(tab),\n          children: tab.tabName\n        }, tab.tabName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      }), console.log(tabz)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderMenu()\n  }, void 0, false);\n};\n\n_s(Menu, \"WNPCPqyYYUZQ1wxL0c1Dn+kQV/8=\");\n\n_c = Menu;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    tabs: state.tabs,\n    goals: state.goals\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectTab\n})(Menu);\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/Menu.js"],"names":["useState","Link","connect","selectTab","Menu","props","taskName","setTaskName","goalsName","setGoalsName","remindersName","setRemindersName","taskTab","goalTab","remindTab","renderMenu","tabs","map","tab","tabName","console","log","tabz","mapStateToProps","state","goals"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpBL,IAAAA,WAAW,CAAC,QAAD,CAAX;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAJD;;AAMA,WAASE,OAAT,GAAmB;AACjBJ,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;;AAED,WAASG,SAAT,GAAqB;AACnBH,IAAAA,gBAAgB,CAAC,QAAD,CAAhB;AACAJ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AAED,QAAMM,UAAU,GAAG,MAAM;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,iBAEGV,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAeC,GAAG,IAAI;AACrB,4BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,IAAGA,GAAG,CAACC,OAAQ,EAA1B;AAA+C,UAAA,SAAS,EAAG,QAAQd,KAAK,CAACF,SAAN,CAAgBgB,OAAhB,IAA2B,QAA5B,IAAyC,EAAG,EAA9G;AAAgH,UAAA,OAAO,EAAE,MAAMd,KAAK,CAACF,SAAN,CAAgBe,GAAhB,CAA/H;AAAA,oBACGA,GAAG,CAACC;AADP,WAAkCD,GAAG,CAACC,OAAtC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAFH,EASGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD;;AAgBA,sBACE;AAAA,cAeKP,UAAU;AAff,mBADF;AAoBD,CA3DM;;GAAMX,I;;KAAAA,I;;AA6Db,MAAMmB,eAAe,GAAGC,KAAK,IAAI;AAC/BJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAO;AAAER,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAd;AAAoBS,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAjC,GAAP;AACD,CAHD;;AAKA,eAAevB,OAAO,CAACqB,eAAD,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { selectTab } from '../redux/actions'\n\nexport const Menu = props => {\n  const [taskName, setTaskName] = useState('active')\n  const [goalsName, setGoalsName] = useState('')\n  const [remindersName, setRemindersName] = useState('')\n\n  const taskTab = () => {\n    setTaskName('active')\n    setGoalsName('')\n    setRemindersName('')\n  }\n\n  function goalTab() {\n    setGoalsName('active')\n    setTaskName('')\n    setRemindersName('')\n  }\n\n  function remindTab() {\n    setRemindersName('active')\n    setTaskName('')\n    setGoalsName('')\n  }\n\n  const renderMenu = () => {\n    return (\n      <div className=\"ui top attached tabular menu\">\n\n        {props.tabs.map(tab => {\n          return (\n            <Link to={`/${tab.tabName}`} key={tab.tabName} className={`item ${(props.selectTab.tabName && 'active') || ''}`}onClick={() => props.selectTab(tab)}>\n              {tab.tabName}\n            </Link>\n          )\n        })}\n        {console.log(tabz)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {/* <div className=\"ui top attached tabular menu\"> */}\n        {/* <Link to=\"/tasks\" className={`item ${taskName}`} onClick={taskTab}>\n          Tasks\n        </Link>\n        <Link to=\"/goals\" className={`item ${goalsName}`} onClick={goalTab}>\n          Goals\n        </Link>\n        <Link\n          to=\"/reminders\"\n          className={`item ${remindersName}`}\n          onClick={remindTab}\n        >\n          Reminders\n        </Link> */}\n        {renderMenu()}\n      {/* </div> */}\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  console.log(state, )\n  return { tabs: state.tabs, goals: state.goals }\n}\n\nexport default connect(mapStateToProps, {selectTab})(Menu)\n"]},"metadata":{},"sourceType":"module"}