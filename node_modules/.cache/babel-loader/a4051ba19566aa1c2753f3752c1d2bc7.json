{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport EditTask from '../components/EditTask';\nimport { selectTask } from '../redux/actions/index';\nimport AddTask from '../components/AddTask';\nimport Menu from '../components/Menu';\nimport BannerImage from '../components/BannerImage';\nimport { connect } from 'react-redux';\nimport { fetchTasks } from '../redux/actions/index';\nimport axios from 'axios';\nimport { Button, Icon } from 'semantic-ui-react';\nimport DeleteTask from '../components/DeleteTask'; // import TaskDataService from '../services/taskService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [tasksList, setTasksList] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // fetchTasks()\n    console.log('IM FIRST' + user.result.googleId);\n    fetchList(user.result.googleId); // renderTaskList(props.match.params.id)\n  }, [props.match.params.id]);\n\n  const deleteTask = id => {\n    console.log(id, \"ID\");\n    axios.delete('http://localhost:5000/' + id).then(response => {\n      console.log(response.data + 'response data');\n    });\n    setTasksList(tasksList.filter(el => el._id !== id));\n  };\n\n  const fetchList = id => {\n    axios.get('http://localhost:5000/task').then(response => {\n      setTasksList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // const EditTask = (id) => {\n  // }\n\n\n  const renderTasks = () => {\n    return tasksList.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => props.selectTask(task),\n        children: [console.log(task._id + ' Here you go!' + props.selectedTask.id), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"collapsing \",\n          children: [/*#__PURE__*/_jsxDEV(EditTask, {\n            id: task._id,\n            selectedTask: props.selectedTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            color: \"teal\",\n            className: \"ui small teal icon\",\n            onClick: () => deleteTask(task._id),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"trash alternate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 111\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [task.taskStartTime, \" - \", task.taskEndTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: task.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    });\n  }; // console.log(tasksList[2]._id, 'here')\n  // console.log(tasksList.task._id, 'hiihihi')\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(props.tasks, 'selectedtask: ', props.selectedTask), /*#__PURE__*/_jsxDEV(BannerImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui bottom attached segment\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ui compact teal celled definition table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(AddTask, {\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tasks, \"9AcX0izoEFWvoXgOaLNS679VHYc=\");\n\n_c = Tasks;\n\nconst mapStateToProps = state => {\n  return {\n    selectedTask: state.selectedTask,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectTask,\n  fetchTasks\n})(Tasks);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js"],"names":["useEffect","useState","EditTask","selectTask","AddTask","Menu","BannerImage","connect","fetchTasks","axios","Button","Icon","DeleteTask","Tasks","props","user","setUser","JSON","parse","localStorage","getItem","tasksList","setTasksList","tasks","setTasks","console","log","result","googleId","fetchList","match","params","id","deleteTask","delete","then","response","data","filter","el","_id","get","catch","error","renderTasks","map","task","selectedTask","textAlign","taskTitle","taskStartTime","taskEndTime","notes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport EditTask from '../components/EditTask'\nimport { selectTask } from '../redux/actions/index'\nimport AddTask from '../components/AddTask'\nimport Menu from '../components/Menu'\nimport BannerImage from '../components/BannerImage'\nimport { connect } from 'react-redux'\nimport { fetchTasks } from '../redux/actions/index'\nimport axios from 'axios'\nimport { Button, Icon } from 'semantic-ui-react'\nimport DeleteTask from '../components/DeleteTask'\n// import TaskDataService from '../services/taskService'\n\nconst Tasks = props => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [tasksList, setTasksList] = useState([])\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    // fetchTasks()\n    console.log('IM FIRST' + user.result.googleId)\n    fetchList(user.result.googleId)\n   \n    // renderTaskList(props.match.params.id)\n  }, [props.match.params.id])\n\n  \n  const deleteTask = (id) => {\n    console.log(id, \"ID\")\n    axios.delete('http://localhost:5000/' +  id).then(response => {\n      console.log(response.data + 'response data')\n    })\n    \n    setTasksList(\n      tasksList.filter((el) => el._id !== id),\n        );\n  }\n  \n  const fetchList = (id) => {\n    axios\n    .get('http://localhost:5000/task')\n    .then(response => {\n      setTasksList(response.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  // const EditTask = (id) => {\n\n  // }\n\n  const renderTasks = () => {\n      return tasksList.map((task) => {\n        return (\n\n          <tr key={task._id} onClick={() => props.selectTask(task)} >\n          {console.log(task._id + ' Here you go!' + props.selectedTask.id)}\n            <td className=\"collapsing \">\n              <EditTask id={task._id} selectedTask={props.selectedTask} />\n              <Button basic color=\"teal\"  className=\"ui small teal icon\" onClick={() => deleteTask(task._id)}><Icon name=\"trash alternate\" /></Button>\n              {/* <DeleteTask /> */}\n            </td>\n            <td style={{ textAlign: 'center' }}>{task.taskTitle}</td>\n            <td style={{ textAlign: 'center' }}>\n              {task.taskStartTime} - {task.taskEndTime}\n            </td>\n            <td style={{ textAlign: 'center' }}>{task.notes}</td>\n          </tr>\n        )\n      }) \n  }\n// console.log(tasksList[2]._id, 'here')\n  \n\n\n// console.log(tasksList.task._id, 'hiihihi')\n  return (\n    <>\n      {console.log(props.tasks, 'selectedtask: ', props.selectedTask)}\n      <BannerImage />\n      <Menu />\n      <div className=\"ui bottom attached segment\">\n        <table className=\"ui compact teal celled definition table\">\n          <thead className=\"full-width\">\n            <tr>\n              <th></th>\n              <th style={{ textAlign: 'center' }}>Task</th>\n              <th style={{ textAlign: 'center' }}>Time</th>\n              <th style={{ textAlign: 'center' }}>Notes</th>\n            </tr>\n          </thead>\n          <tbody>{renderTasks()}</tbody>\n          <tfoot className=\"full-width\">\n            <tr>\n              <th></th>\n              <th colSpan=\"4\" style={{ textAlign: 'center' }}>\n                <AddTask user={user} />\n\n                {/* <div className=\"ui right floated  buttons\">\n                <button className=\"ui teal button\">Edit Task</button>\n                <div className=\"or\"></div>\n                <button className=\"ui red button\">Delete Task</button>\n              </div> */}\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { selectedTask: state.selectedTask, tasks: state.tasks  }\n}\n\nexport default connect(mapStateToProps, { selectTask, fetchTasks })(Tasks)\n"]},"metadata":{},"sourceType":"module"}