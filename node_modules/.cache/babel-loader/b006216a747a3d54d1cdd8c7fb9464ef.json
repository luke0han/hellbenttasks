{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js\";\nimport { connect } from 'react-redux';\nimport { Button, Modal, Icon, TextArea } from 'semantic-ui-react';\nimport CreateEditTasks from '../components/CreateEditTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTask = props => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"ui small basic teal icon\",\n      labelPosition: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pencil icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) // <CreateEditTasks />\n    ,\n    header: \"Edit/Delete Task\",\n    content: props.selectedTask,\n    actions: ['Snooze', {\n      key: 'done',\n      content: 'Done',\n      positive: true\n    }],\n    children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui raised segment\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"ui form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"task-name\",\n                placeholder: \"\" // onChange={e => setTask(e.target.value)}\n                ,\n                value: props.selectedTask.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui three column stackable padded center aligned grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\" // onChange={e => setFromTime(e.target.value)}\n                    ,\n                    value: props.selectedTask.startTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"two wide column ui horizontal divider\",\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\" // onChange={e => setToTime(e.target.value)}\n                    ,\n                    value: props.selectedTask.endTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"ui loading icon input\",\n                  children: /*#__PURE__*/_jsxDEV(TextArea, {\n                    placeholder: \"\",\n                    children: props.selectedTask.notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui padded equal width grid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two column padded centered grid \",\n              children: /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                children: [/*#__PURE__*/_jsxDEV(Button //   onClick={cancelTaskAdd}\n                , {\n                  className: \"center\",\n                  basic: true,\n                  color: \"teal\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), \"Cancel\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button //   onClick={() => newTaskAdded()}\n                , {\n                  color: \"teal\",\n                  className: \"four wide column\",\n                  children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"right chevron\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EditTask;\n\nconst mapStateToProps = state => {\n  return {\n    selectedTask: state.selectedTask\n  };\n};\n\nexport default connect(mapStateToProps)(EditTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js"],"names":["connect","Button","Modal","Icon","TextArea","CreateEditTasks","EditTask","props","selectedTask","key","content","positive","title","startTime","endTime","notes","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Button, Modal, Icon, TextArea } from 'semantic-ui-react'\n\nimport CreateEditTasks from '../components/CreateEditTasks'\n\nconst EditTask = (props) => {\n    \n\n    return (\n        <Modal trigger={\n        <Button\n            className=\"ui small basic teal icon\"\n            labelPosition='right'\n          >\n            \n            <i className=\"pencil icon\" />\n          </Button>\n        // <CreateEditTasks />\n          }\n        header='Edit/Delete Task'\n        content={props.selectedTask}\n        actions={['Snooze', { key: 'done', content: 'Done', positive: true }]}\n      >\n<Modal.Content image>\n          <Modal.Description>\n            <div className=\"ui raised segment\">\n              <form className=\"ui form\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Task\n                    </a>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"task-name\"\n                    placeholder=\"\"\n                    // onChange={e => setTask(e.target.value)}\n                    value={props.selectedTask.title}\n                 />\n                  {/* <TextArea>{props.selectedTask.title}</TextArea>  */}\n                </div>\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Time\n                    </a>\n                  </label>\n                  <div className=\"ui three column stackable padded center aligned grid\">\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"task-time\"\n                        placeholder=\"Task Time\"\n                        // onChange={e => setFromTime(e.target.value)}\n                        value={props.selectedTask.startTime}\n                      />\n                    </div>\n                    <div className=\"two wide column ui horizontal divider\">\n                      To\n                    </div>\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"task-time\"\n                        placeholder=\"Task Time\"\n                        // onChange={e => setToTime(e.target.value)}\n                        value={props.selectedTask.endTime}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"field\">\n                    <label>\n                      <a href=\"/\" className=\"ui teal left ribbon label\">\n                        Notes\n                      </a>\n                    </label>\n                    <div class=\"ui loading icon input\">\n                    <TextArea placeholder=''>{props.selectedTask.notes}</TextArea>\n                    </div>\n                    <div className=\"ui padded equal width grid\"></div>\n                  </div>\n                </div>\n                <div className=\"ui two column padded centered grid \">\n                  <Modal.Actions>\n                    <Button\n                    //   onClick={cancelTaskAdd}\n                      className=\"center\"\n                      basic\n                      color=\"teal\"\n                    >\n                      <Icon name=\"close\" />\n                      Cancel\n                    </Button>\n                    <Button\n                    //   onClick={() => newTaskAdded()}\n                      color=\"teal\"\n                      className=\"four wide column\"\n                    >\n                      Proceed <Icon name=\"right chevron\" />\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              </form>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => {\n return  { selectedTask: state.selectedTask }\n}\n\nexport default connect(mapStateToProps)(EditTask)"]},"metadata":{},"sourceType":"module"}