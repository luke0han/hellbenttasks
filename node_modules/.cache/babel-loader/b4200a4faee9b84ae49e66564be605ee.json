{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js\";\nimport { connect } from 'react-redux';\nimport { Button, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTask = props => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 25\n    }, this),\n    header: \"Edit/Delete Task\",\n    content: props.selectedTask,\n    actions: ['Snooze', {\n      key: 'done',\n      content: 'Done',\n      positive: true\n    }],\n    children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui raised segment\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"ui form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"task-name\",\n                placeholder: \"Task Name\",\n                onChange: e => setTask(e.target.value),\n                value: task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"ui teal left ribbon label\",\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui three column stackable padded center aligned grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\",\n                    onChange: e => setFromTime(e.target.value),\n                    value: fromTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"two wide column ui horizontal divider\",\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seven wide column\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    name: \"task-time\",\n                    placeholder: \"Task Time\",\n                    onChange: e => setToTime(e.target.value),\n                    value: toTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/\",\n                    className: \"ui teal left ribbon label\",\n                    children: \"Notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"ui loading icon input\",\n                  children: /*#__PURE__*/_jsxDEV(TextArea, {\n                    placeholder: \"Add notes about your task...\",\n                    onChange: e => setNotes(e.target.value),\n                    value: notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui padded equal width grid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two column padded centered grid \",\n              children: /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: cancelTaskAdd,\n                  className: \"center\",\n                  basic: true,\n                  color: \"teal\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), \"Cancel\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => newTaskAdded(),\n                  color: \"teal\",\n                  className: \"four wide column\",\n                  children: [\"Proceed \", /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"right chevron\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EditTask;\n\nconst mapStateToProps = state => {\n  return {\n    selectedTask: state.selectedTask\n  };\n};\n\nexport default connect(mapStateToProps)(EditTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/components/EditTask.js"],"names":["connect","Button","Modal","EditTask","props","selectedTask","key","content","positive","e","setTask","target","value","task","setFromTime","fromTime","setToTime","toTime","setNotes","notes","cancelTaskAdd","newTaskAdded","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Button, Modal } from 'semantic-ui-react'\n\nconst EditTask = (props) => {\n    \n\n    return (\n        <Modal trigger={<Button>hi</Button>}\n        header='Edit/Delete Task'\n        content={props.selectedTask}\n        actions={['Snooze', { key: 'done', content: 'Done', positive: true }]}\n      >\n<Modal.Content image>\n          <Modal.Description>\n            <div className=\"ui raised segment\">\n              <form className=\"ui form\">\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Task\n                    </a>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"task-name\"\n                    placeholder=\"Task Name\"\n                    onChange={e => setTask(e.target.value)}\n                    value={task}\n                  />\n                </div>\n                <div className=\"field\">\n                  <label>\n                    <a href=\"/\" className=\"ui teal left ribbon label\">\n                      Time\n                    </a>\n                  </label>\n                  <div className=\"ui three column stackable padded center aligned grid\">\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"task-time\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setFromTime(e.target.value)}\n                        value={fromTime}\n                      />\n                    </div>\n                    <div className=\"two wide column ui horizontal divider\">\n                      To\n                    </div>\n                    <div className=\"seven wide column\">\n                      <input\n                        type=\"time\"\n                        name=\"task-time\"\n                        placeholder=\"Task Time\"\n                        onChange={e => setToTime(e.target.value)}\n                        value={toTime}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"field\">\n                    <label>\n                      <a href=\"/\" className=\"ui teal left ribbon label\">\n                        Notes\n                      </a>\n                    </label>\n                    <div class=\"ui loading icon input\">\n                    <TextArea placeholder='Add notes about your task...' onChange={e => setNotes(e.target.value)} value={notes} />\n                    </div>\n                    <div className=\"ui padded equal width grid\"></div>\n                  </div>\n                </div>\n                <div className=\"ui two column padded centered grid \">\n                  <Modal.Actions>\n                    <Button\n                      onClick={cancelTaskAdd}\n                      className=\"center\"\n                      basic\n                      color=\"teal\"\n                    >\n                      <Icon name=\"close\" />\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => newTaskAdded()}\n                      color=\"teal\"\n                      className=\"four wide column\"\n                    >\n                      Proceed <Icon name=\"right chevron\" />\n                    </Button>\n                  </Modal.Actions>\n                </div>\n              </form>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => {\n return  { selectedTask: state.selectedTask }\n}\n\nexport default connect(mapStateToProps)(EditTask)"]},"metadata":{},"sourceType":"module"}