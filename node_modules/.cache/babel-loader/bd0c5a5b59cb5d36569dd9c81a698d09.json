{"ast":null,"code":"var _jsxFileName = \"/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport EditTask from '../components/EditTask';\nimport { selectTask } from '../redux/actions/index';\nimport AddTask from '../components/AddTask';\nimport Menu from '../components/Menu';\nimport BannerImage from '../components/BannerImage';\nimport { connect } from 'react-redux';\nimport { fetchTasks } from '../redux/actions/index';\nimport axios from 'axios';\nimport { Button, Icon } from 'semantic-ui-react';\nimport DeleteTask from '../components/DeleteTask'; // import TaskDataService from '../services/taskService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [tasksList, setTasksList] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // fetchTasks()\n    console.log('IM FIRST');\n    axios.get('http://localhost:5000/task').then(response => {\n      setTasksList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    }); // \n\n    const renderTasks = () => {\n      return tasksList.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => props.selectTask(task),\n          children: [console.log(task._id + ' Here you go!' + props.selectedTask.id), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"collapsing \",\n            children: [/*#__PURE__*/_jsxDEV(EditTask, {\n              id: task._id,\n              selectedTask: props.selectedTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              basic: true,\n              color: \"teal\",\n              className: \"ui small teal icon\",\n              onClick: () => deleteTask(task._id),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"trash alternate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 113\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: task.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [task.taskStartTime, \" - \", task.taskEndTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: task.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      });\n    }; // renderTaskList(props.match.params.id)\n\n  }, [props.match.params.id]);\n\n  const deleteTask = id => {\n    console.log(id, \"ID\");\n    axios.delete('http://localhost:5000/' + id).then(response => {\n      console.log(response.data + 'response data');\n    });\n    setTasksList(tasksList.filter(el => el._id !== id));\n  }; // const EditTask = (id) => {\n  // }\n  // const renderTasks = () => {\n  //     return tasksList.map((task) => {\n  //       return (\n  //         <tr key={task._id} onClick={() => props.selectTask(task)} >\n  //         {console.log(task._id + ' Here you go!' + props.selectedTask.id)}\n  //           <td className=\"collapsing \">\n  //             <EditTask id={task._id} selectedTask={props.selectedTask} />\n  //             <Button basic color=\"teal\"  className=\"ui small teal icon\" onClick={() => deleteTask(task._id)}><Icon name=\"trash alternate\" /></Button>\n  //             {/* <DeleteTask /> */}\n  //           </td>\n  //           <td style={{ textAlign: 'center' }}>{task.taskTitle}</td>\n  //           <td style={{ textAlign: 'center' }}>\n  //             {task.taskStartTime} - {task.taskEndTime}\n  //           </td>\n  //           <td style={{ textAlign: 'center' }}>{task.notes}</td>\n  //         </tr>\n  //       )\n  //     }) \n  // }\n  // console.log(tasksList[2]._id, 'here')\n\n\n  const updateList = () => {\n    setTasksList(...tasksList);\n  }; // console.log(tasksList.task._id, 'hiihihi')\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(props.tasks, 'selectedtask: ', props.selectedTask), /*#__PURE__*/_jsxDEV(BannerImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui bottom attached segment\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ui compact teal celled definition table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          className: \"full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(AddTask, {\n                user: user,\n                updateList: updateList,\n                renderTasks: renderTasks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tasks, \"8uMEkDUW3wXFuMM/XB90Ah5NxbE=\");\n\n_c = Tasks;\n\nconst mapStateToProps = state => {\n  return {\n    selectedTask: state.selectedTask,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectTask,\n  fetchTasks\n})(Tasks);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/lukeohanlon/Documents/myApps/hellbent/front/hellbent/src/pages/Tasks.js"],"names":["useEffect","useState","EditTask","selectTask","AddTask","Menu","BannerImage","connect","fetchTasks","axios","Button","Icon","DeleteTask","Tasks","props","user","setUser","tasksList","setTasksList","tasks","setTasks","console","log","get","then","response","data","catch","error","renderTasks","map","task","_id","selectedTask","id","deleteTask","textAlign","taskTitle","taskStartTime","taskEndTime","notes","match","params","delete","filter","el","updateList","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport EditTask from '../components/EditTask'\nimport { selectTask } from '../redux/actions/index'\nimport AddTask from '../components/AddTask'\nimport Menu from '../components/Menu'\nimport BannerImage from '../components/BannerImage'\nimport { connect } from 'react-redux'\nimport { fetchTasks } from '../redux/actions/index'\nimport axios from 'axios'\nimport { Button, Icon } from 'semantic-ui-react'\nimport DeleteTask from '../components/DeleteTask'\n// import TaskDataService from '../services/taskService'\n\nconst Tasks = props => {\n  const [user, setUser] = useState(null)\n  const [tasksList, setTasksList] = useState([])\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    // fetchTasks()\n    console.log('IM FIRST')\n    axios\n      .get('http://localhost:5000/task')\n      .then(response => {\n        setTasksList(response.data)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      // \n      const renderTasks = () => {\n    \n        return tasksList.map((task) => {\n          return (\n  \n            <tr key={task._id} onClick={() => props.selectTask(task)} >\n            {console.log(task._id + ' Here you go!' + props.selectedTask.id)}\n              <td className=\"collapsing \">\n                <EditTask id={task._id} selectedTask={props.selectedTask} />\n                <Button basic color=\"teal\"  className=\"ui small teal icon\" onClick={() => deleteTask(task._id)}><Icon name=\"trash alternate\" /></Button>\n                {/* <DeleteTask /> */}\n              </td>\n              <td style={{ textAlign: 'center' }}>{task.taskTitle}</td>\n              <td style={{ textAlign: 'center' }}>\n                {task.taskStartTime} - {task.taskEndTime}\n              </td>\n              <td style={{ textAlign: 'center' }}>{task.notes}</td>\n            </tr>\n          )\n        }) \n    }\n    // renderTaskList(props.match.params.id)\n  }, [props.match.params.id])\n\n  \n  const deleteTask = (id) => {\n    console.log(id, \"ID\")\n    axios.delete('http://localhost:5000/' +  id).then(response => {\n      console.log(response.data + 'response data')\n    })\n    \n    setTasksList(\n      tasksList.filter((el) => el._id !== id),\n        );\n  }\n\n  // const EditTask = (id) => {\n\n  // }\n\n  // const renderTasks = () => {\n    \n  //     return tasksList.map((task) => {\n  //       return (\n\n  //         <tr key={task._id} onClick={() => props.selectTask(task)} >\n  //         {console.log(task._id + ' Here you go!' + props.selectedTask.id)}\n  //           <td className=\"collapsing \">\n  //             <EditTask id={task._id} selectedTask={props.selectedTask} />\n  //             <Button basic color=\"teal\"  className=\"ui small teal icon\" onClick={() => deleteTask(task._id)}><Icon name=\"trash alternate\" /></Button>\n  //             {/* <DeleteTask /> */}\n  //           </td>\n  //           <td style={{ textAlign: 'center' }}>{task.taskTitle}</td>\n  //           <td style={{ textAlign: 'center' }}>\n  //             {task.taskStartTime} - {task.taskEndTime}\n  //           </td>\n  //           <td style={{ textAlign: 'center' }}>{task.notes}</td>\n  //         </tr>\n  //       )\n  //     }) \n  // }\n// console.log(tasksList[2]._id, 'here')\n  \n\n  const updateList = () => {\n    setTasksList(...tasksList)\n  }\n// console.log(tasksList.task._id, 'hiihihi')\n  return (\n    <>\n      {console.log(props.tasks, 'selectedtask: ', props.selectedTask)}\n      <BannerImage />\n      <Menu />\n      <div className=\"ui bottom attached segment\">\n        <table className=\"ui compact teal celled definition table\">\n          <thead className=\"full-width\">\n            <tr>\n              <th></th>\n              <th style={{ textAlign: 'center' }}>Task</th>\n              <th style={{ textAlign: 'center' }}>Time</th>\n              <th style={{ textAlign: 'center' }}>Notes</th>\n            </tr>\n          </thead>\n          <tbody>{renderTasks()}</tbody>\n          <tfoot className=\"full-width\">\n            <tr>\n              <th></th>\n              <th colSpan=\"4\" style={{ textAlign: 'center' }}>\n                <AddTask user={user} updateList={updateList} renderTasks={renderTasks} />\n\n                {/* <div className=\"ui right floated  buttons\">\n                <button className=\"ui teal button\">Edit Task</button>\n                <div className=\"or\"></div>\n                <button className=\"ui red button\">Delete Task</button>\n              </div> */}\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return { selectedTask: state.selectedTask, tasks: state.tasks  }\n}\n\nexport default connect(mapStateToProps, { selectTask, fetchTasks })(Tasks)\n"]},"metadata":{},"sourceType":"module"}